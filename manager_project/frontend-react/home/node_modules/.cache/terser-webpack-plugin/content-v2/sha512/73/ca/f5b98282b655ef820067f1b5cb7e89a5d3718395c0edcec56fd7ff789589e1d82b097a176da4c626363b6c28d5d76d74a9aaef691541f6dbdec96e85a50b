{"map":"{\"version\":3,\"sources\":[\"/var/www/manager_project/frontend-react/src/multi-component/Earth.js\",\"/var/www/manager_project/frontend-react/src/App.js\",\"/var/www/manager_project/frontend-react/src/multi-component/navigationMenu.js\",\"/var/www/manager_project/frontend-react/src/multi-component/ValueInput.js\",\"/var/www/manager_project/frontend-react/src/multi-component/inchToCm.js\",\"/var/www/manager_project/frontend-react/src/serviceWorker.js\",\"/var/www/manager_project/frontend-react/src/index.js\"],\"names\":[\"Earth\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"data\",\"width\",\"height\",\"surfaceColor\",\"selectedColor\",\"haloColor\",\"backgroundColor\",\"initCountry\",\"lightMentioned\",\"disableUnmentioned\",\"transparentBackGround\",\"autoRotation\",\"rotationRatio\",\"halo\",\"oceanBrightness\",\"mentionedBrightness\",\"relatedBrightness\",\"console\",\"log\",\"_controller\",\"config\",\"control\",\"color\",\"surface\",\"selected\",\"background\",\"brightness\",\"ocean\",\"mentioned\",\"related\",\"react_default\",\"a\",\"createElement\",\"Gio_min_default\",\"forceSwitchCountry\",\"setAutoRotation\",\"configs\",\"Gio\",\"Component\",\"useStyles\",\"makeStyles\",\"root\",\"NavigationMenu\",\"classes\",\"_React$useState\",\"React\",\"useState\",\"_React$useState2\",\"slicedToArray\",\"value\",\"setValue\",\"BottomNavigation\",\"onChange\",\"event\",\"newValue\",\"showLabels\",\"className\",\"BottomNavigationAction\",\"label\",\"icon\",\"Restore_default\",\"Favorite_default\",\"LocationOn_default\",\"ValueInput\",\"e\",\"target\",\"replace\",\"setState\",\"nextProps\",\"_this2\",\"title\",\"type\",\"handleChange\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"Earth_Earth\",\"document\",\"getElementById\",\"error\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react'\\nimport axios from 'axios'\\nimport Gio from 'react-giojs'\\n\\nexport default class Earth extends Gio {\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            data: [\\n            ],\\n            width: 1000,\\n            height: 1000,\\n            surfaceColor: 0x436FB0,\\n            selectedColor: 0x78A6E2,\\n            haloColor: 0xC9E8FF,\\n            backgroundColor: 0x000000,\\n            initCountry: \\\"JP\\\",\\n            lightMentioned: true,\\n            disableUnmentioned: false,\\n            transparentBackGround: false,\\n            autoRotation: true,\\n            rotationRatio: 1,\\n            halo: true,\\n            oceanBrightness: 0.43,\\n            mentionedBrightness: 1,\\n            relatedBrightness: 0.46,\\n        };\\n\\n        /**\\n        this.onCountryPicked = function(selectedCountry, relatedCountry) {\\n            console.log(\\\"bbbb\\\");\\n            console.log(selectedCountry);\\n        };\\n         */\\n\\n        /**\\n\\n         setTimeout(() => {\\n            this.setState({\\n                data: [\\n                    {\\n                        \\\"e\\\": \\\"CN\\\",\\n                        \\\"i\\\": \\\"US\\\",\\n                        \\\"v\\\": 3300000\\n                    }\\n                ]\\n            });\\n        }, 3000);\\n\\n         setTimeout(() => {\\n            this.setState({forceSwitchCountry: \\\"US\\\"});\\n        }, 5000);\\n\\n         setTimeout(() => {\\n            this.setState({\\n                surfaceColor: 0x00FF00,\\n                selectedColor: 0x0000FF\\n            });\\n        }, 5000);\\n\\n         setTimeout(() => {\\n            this.setState({\\n                halo: false\\n            });\\n        }, 7000);\\n         */\\n    }\\n\\n    /**\\n    componentDidMount() {\\n        // fails\\n\\n        axios.get(`http://127.0.0.1:10000/var/www/manager_project/frontend-react/src/data/countryData.json`)\\n            .then(response => this.setState({data: response.data}))\\n\\n        console.log(\\\"aaaaa\\\");\\n    }\\n    */\\n\\n    componentDidMount() {\\n        console.log(this.props);\\n        console.log(this.state);\\n        console.log(this._controller);\\n    }\\n\\n    render() {\\n        const config = {\\n            control: {\\n                halo: this.state.halo,\\n                initCountry: this.state.initCountry,\\n                autoRotation: this.state.autoRotation,\\n                rotationRatio: this.state.rotationRatio,\\n                transparentBackGround: this.state.transparentBackGround\\n            },\\n            color: {\\n                surface: this.state.surfaceColor,\\n                selected: this.state.selectedColor,\\n                halo: this.state.haloColor,\\n                background: this.state.backgroundColor,\\n            },\\n            brightness: {\\n                ocean: this.state.oceanBrightness,\\n                mentioned: this.state.mentionedBrightness,\\n                related: this.state.relatedBrightness,\\n            }\\n        };\\n\\n        return (\\n            <Gio width={this.state.width}\\n                 height={this.state.height}\\n                 data={this.state.data}\\n                 forceSwitchCountry={this.state.forceSwitchCountry}\\n                 setAutoRotation={this.state.setAutoRotation}\\n                 configs={config}\\n            />\\n        )\\n    }\\n}\",\"import React, {Component} from 'react';\\nimport axios from 'axios';\\nimport Earth from './multi-component/Earth';\\nimport Gio from 'react-giojs';\\n\\nclass App extends Component {\\n\\n    constructor() {\\n        super();\\n\\n        this.state = {\\n            data: [\\n                {\\n                    \\\"e\\\": \\\"CN\\\",\\n                    \\\"i\\\": \\\"US\\\",\\n                    \\\"v\\\": 3300000\\n                }\\n            ],\\n            width: 1000,\\n            height: 1000,\\n            surfaceColor: 0xFF0000,\\n            selectedColor: null,\\n            halo: true,\\n            setAutoRotation: true\\n        };\\n\\n        /**\\n\\n        setTimeout(() => {\\n            this.setState({\\n                data: [\\n                    {\\n                        \\\"e\\\": \\\"CN\\\",\\n                        \\\"i\\\": \\\"US\\\",\\n                        \\\"v\\\": 3300000\\n                    }\\n                ]\\n            });\\n        }, 3000);\\n\\n        setTimeout(() => {\\n            this.setState({forceSwitchCountry: \\\"US\\\"});\\n        }, 5000);\\n\\n        setTimeout(() => {\\n            this.setState({\\n                surfaceColor: 0x00FF00,\\n                selectedColor: 0x0000FF\\n            });\\n        }, 5000);\\n\\n        setTimeout(() => {\\n            this.setState({\\n                halo: false\\n            });\\n        }, 7000);\\n         */\\n    }\\n\\n    componentDidMount() {\\n        // fails\\n        /**\\n        axios.get(`http://127.0.0.1:10000/var/www/manager_project/frontend-react/src/data/countryData.json`)\\n            .then(response => this.setState({data: response.data}))\\n         */\\n    }\\n\\n    render() {\\n        const config = {\\n            control: {\\n                halo: this.state.halo\\n            },\\n            color: {\\n                surface: this.state.surfaceColor,\\n                selected: this.state.selectedColor\\n            }\\n        };\\n\\n        console.log(this._controller);\\n        console.log(Gio);\\n\\n        return (\\n            <Gio width={this.state.width}\\n                 height={this.state.height}\\n                 data={this.state.data}\\n                 forceSwitchCountry={this.state.forceSwitchCountry}\\n                 setAutoRotation={this.state.setAutoRotation}\\n                 configs={config}\\n            />\\n        )\\n    }\\n}\\n\\nexport default App;\",\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\\nimport RestoreIcon from '@material-ui/icons/Restore';\\nimport FavoriteIcon from '@material-ui/icons/Favorite';\\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\\n\\nconst useStyles = makeStyles({\\n    root: {\\n        width: 500,\\n    },\\n});\\n\\nexport default function NavigationMenu() {\\n    const classes = useStyles();\\n    const [value, setValue] = React.useState(0);\\n\\n    return (\\n        <BottomNavigation\\n            value={value}\\n            onChange={(event, newValue) => {\\n                setValue(newValue);\\n            }}\\n            showLabels\\n            className={classes.root}\\n        >\\n            <BottomNavigationAction label=\\\"Recents\\\" icon={<RestoreIcon />} />\\n            <BottomNavigationAction label=\\\"Favorites\\\" icon={<FavoriteIcon />} />\\n            <BottomNavigationAction label=\\\"Nearby\\\" icon={<LocationOnIcon />} />\\n        </BottomNavigation>\\n    );\\n}\",\"import React, {Component} from 'react'\\n\\nexport default class ValueInput extends Component {\\n    constructor (props) {\\n        super(props)\\n        this.state = {\\n            value: this.props.value\\n        }\\n    }\\n\\n    handleChange (e) {\\n        const v = e.target.value\\n        const newValue = v.replace(/[^0-9.]+/g, '')\\n        this.setState({value: newValue})\\n        if (this.props.onChange) {\\n            this.props.onChange({\\n                target: this,\\n                value: newValue\\n            })\\n        }\\n    }\\n\\n    componentWillReceiveProps(nextProps) {\\n        this.setState({value: nextProps.value})\\n    }\\n\\n    render () {\\n        return (<div>\\n            <label>{this.props.title}: <br />\\n            <input type='text'\\n            value={this.state.value}\\n            onChange = {e => this.handleChange(e)} />\\n            </label>\\n        </div>)\\n    }\\n\\n}\",\"import React, {Component} from 'react'\\nimport ValueInput from './ValueInput'\\n\\nexport default class InchToCm extends Component {\\n    constructor (props) {\\n        super(props)\\n        this.state = {\\n            inch: 0, cm: 0\\n        }\\n    }\\n\\n    inchChanged (e) {\\n        const inchValue = e.value\\n        const cmValue = inchValue * 2.54\\n        this.setState({\\n            inch: inchValue,\\n            cm: cmValue\\n        })\\n    }\\n\\n    cmChanged (e) {\\n        const cmValue = e.value\\n        const inchValue = cmValue / 2.54\\n        this.setState({\\n            inch: inchValue,\\n            cm: cmValue\\n        })\\n    }\\n\\n    render () {\\n        return (\\n            <div>\\n                <ValueInput title='inch'\\n                            onChange={e => this.inchChanged(e)}\\n                            value = {this.state.inch} />\\n                <ValueInput title='cm'\\n                            onChange={e => this.cmChanged(e)}\\n                            value = {this.state.cm} />\\n            </div>\\n        )\\n    }\\n}\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport NavigationMenu from './multi-component/navigationMenu';\\nimport InchToCm from './multi-component/inchToCm'\\nimport Earth from './multi-component/Earth';\\nimport * as serviceWorker from './serviceWorker';\\n\\ntry {\\n    ReactDOM.render(getDOM(), document.getElementById('root'));\\n    console.log(\\\"succeeded in rendering\\\")\\n} catch (error) {\\n    console.log(error);\\n    console.log(\\\"erroor\\\");\\n}\\n\\nfunction getDOM() {\\n    // You have to make the first character capital to use it as a component\\n    return (\\n        <div>\\n            <NavigationMenu/>\\n            <Earth/>\\n        </div>\\n    )\\n}\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{53:function(t,e,a){t.exports=a(92)},57:function(t,e,a){},92:function(t,e,a){\"use strict\";a.r(e);var n=a(0),o=a.n(n),r=a(11),i=a.n(r),s=(a(57),a(12)),l=a(8),c=a(16),h=a(13),u=a(15),d=(a(32),a(20)),g=a.n(d),m=function(t){function e(t){var a;return Object(s.a)(this,e),(a=Object(c.a)(this,Object(h.a)(e).call(this,t))).state={data:[],width:1e3,height:1e3,surfaceColor:4419504,selectedColor:7907042,haloColor:13232383,backgroundColor:0,initCountry:\"JP\",lightMentioned:!0,disableUnmentioned:!1,transparentBackGround:!1,autoRotation:!0,rotationRatio:1,halo:!0,oceanBrightness:.43,mentionedBrightness:1,relatedBrightness:.46},a}return Object(u.a)(e,t),Object(l.a)(e,[{key:\"componentDidMount\",value:function(){console.log(this.props),console.log(this.state),console.log(this._controller)}},{key:\"render\",value:function(){var t={control:{halo:this.state.halo,initCountry:this.state.initCountry,autoRotation:this.state.autoRotation,rotationRatio:this.state.rotationRatio,transparentBackGround:this.state.transparentBackGround},color:{surface:this.state.surfaceColor,selected:this.state.selectedColor,halo:this.state.haloColor,background:this.state.backgroundColor},brightness:{ocean:this.state.oceanBrightness,mentioned:this.state.mentionedBrightness,related:this.state.relatedBrightness}};return o.a.createElement(g.a,{width:this.state.width,height:this.state.height,data:this.state.data,forceSwitchCountry:this.state.forceSwitchCountry,setAutoRotation:this.state.setAutoRotation,configs:t})}}]),e}(g.a),v=(n.Component,a(49)),p=a(109),b=a(110),f=a(111),C=a(46),w=a.n(C),E=a(47),k=a.n(E),y=a(48),j=a.n(y),O=Object(p.a)({root:{width:500}});function B(){var t=O(),e=o.a.useState(0),a=Object(v.a)(e,2),n=a[0],r=a[1];return o.a.createElement(b.a,{value:n,onChange:function(t,e){r(e)},showLabels:!0,className:t.root},o.a.createElement(f.a,{label:\"Recents\",icon:o.a.createElement(w.a,null)}),o.a.createElement(f.a,{label:\"Favorites\",icon:o.a.createElement(k.a,null)}),o.a.createElement(f.a,{label:\"Nearby\",icon:o.a.createElement(j.a,null)}))}var R=function(t){function e(t){var a;return Object(s.a)(this,e),(a=Object(c.a)(this,Object(h.a)(e).call(this,t))).state={value:a.props.value},a}return Object(u.a)(e,t),Object(l.a)(e,[{key:\"handleChange\",value:function(t){var e=t.target.value.replace(/[^0-9.]+/g,\"\");this.setState({value:e}),this.props.onChange&&this.props.onChange({target:this,value:e})}},{key:\"componentWillReceiveProps\",value:function(t){this.setState({value:t.value})}},{key:\"render\",value:function(){var t=this;return o.a.createElement(\"div\",null,o.a.createElement(\"label\",null,this.props.title,\": \",o.a.createElement(\"br\",null),o.a.createElement(\"input\",{type:\"text\",value:this.state.value,onChange:function(e){return t.handleChange(e)}})))}}]),e}(n.Component);n.Component,Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));try{i.a.render(o.a.createElement(\"div\",null,o.a.createElement(B,null),o.a.createElement(m,null)),document.getElementById(\"root\")),console.log(\"succeeded in rendering\")}catch(S){console.log(S),console.log(\"erroor\")}\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[53,1,2]]]);","extractedComments":[]}