{"map":"{\"version\":3,\"sources\":[\"/var/www/manager_project/frontend-react/recents/src/multi-component/navigationMenu.js\",\"/var/www/manager_project/frontend-react/recents/src/serviceWorker.js\",\"/var/www/manager_project/frontend-react/recents/src/multi-component/photoText.js\",\"/var/www/manager_project/frontend-react/recents/src/index.js\"],\"names\":[\"useStyles\",\"makeStyles\",\"root\",\"width\",\"NavigationMenu\",\"classes\",\"_React$useState\",\"React\",\"useState\",\"_React$useState2\",\"Object\",\"slicedToArray\",\"value\",\"setValue\",\"react_default\",\"a\",\"createElement\",\"BottomNavigation\",\"onChange\",\"event\",\"newValue\",\"showLabels\",\"className\",\"BottomNavigationAction\",\"label\",\"icon\",\"Home_default\",\"href\",\"Restore_default\",\"Photo_default\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"theme\",\"flexGrow\",\"border\",\"borderColor\",\"borderStyle\",\"paper\",\"padding\",\"spacing\",\"margin\",\"maxWidth\",\"background\",\"image\",\"height\",\"img\",\"display\",\"maxHeight\",\"PhotoText\",\"props\",\"desc\",\"description\",\"length\",\"substring\",\"Paper\",\"Grid\",\"container\",\"item\",\"ButtonBase\",\"alt\",\"src\",\"xs\",\"sm\",\"direction\",\"Typography\",\"gutterBottom\",\"variant\",\"title\",\"color\",\"ReactDOM\",\"render\",\"document\",\"getElementById\",\"console\",\"log\",\"error\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\\nimport RestoreIcon from '@material-ui/icons/Restore';\\nimport Photo from '@material-ui/icons/Photo';\\nimport Home from '@material-ui/icons/Home';\\n\\nconst useStyles = makeStyles({\\n    root: {\\n        width: 500,\\n    },\\n});\\n\\nexport default function NavigationMenu() {\\n    const classes = useStyles();\\n    const [value, setValue] = React.useState(0);\\n\\n    return (\\n        <BottomNavigation\\n            value={value}\\n            onChange={(event, newValue) => {\\n                setValue(newValue);\\n            }}\\n            showLabels\\n            className={classes.root}\\n        >\\n            <BottomNavigationAction label=\\\"Home\\\" icon={<Home />}　href={\\\"/home\\\"} />\\n            <BottomNavigationAction label=\\\"Recents\\\" icon={<RestoreIcon />}　href={\\\"/recents\\\"} />\\n            <BottomNavigationAction label=\\\"Photos\\\" icon={<Photo />}　href={\\\"/photography\\\"} />\\n        </BottomNavigation>\\n    );\\n}\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport { makeStyles } from '@material-ui/core/styles';\\nimport Grid from '@material-ui/core/Grid';\\nimport Paper from '@material-ui/core/Paper';\\nimport Typography from '@material-ui/core/Typography';\\nimport ButtonBase from '@material-ui/core/ButtonBase';\\nimport {borders} from '@material-ui/system';\\n\\nconst useStyles = makeStyles(theme => ({\\n    root: {\\n        flexGrow: 1,\\n        width: '100%',\\n        border: 1,\\n        borderColor: '#FDEEF4',\\n        borderStyle: 'solid'\\n    },\\n    paper: {\\n        padding: theme.spacing(2),\\n        margin: 'auto',\\n        maxWidth: 1000,\\n        background: '#FEFCFF',\\n        border: 10,\\n        borderColor: '#696969'\\n    },\\n    image: {\\n        width: 128,\\n        height: 128,\\n    },\\n    img: {\\n        margin: 'auto',\\n        display: 'block',\\n        maxWidth: '100%',\\n        maxHeight: '100%',\\n    },\\n}));\\n\\nexport default function PhotoText(props) {\\n    const classes = useStyles();\\n    let desc = props.description\\n    if (props.description.length > 30) {\\n        let desc = (props.description.substring(0, 30) + \\\"...\\\")\\n    }\\n\\n\\n    return (\\n        <div className={classes.root}>\\n            <Paper className={classes.paper}>\\n                <Grid container spacing={2}>\\n                    <Grid item>\\n                        <ButtonBase className={classes.image}>\\n                            <img className={classes.img} alt=\\\"complex\\\" src={props.img} />\\n                        </ButtonBase>\\n                    </Grid>\\n                    <Grid item xs={12} sm container>\\n                        <Grid item xs container direction=\\\"column\\\" spacing={2}>\\n                            <Grid item xs>\\n                                <Typography gutterBottom variant=\\\"subtitle1\\\">\\n                                    {props.title}\\n                                </Typography>\\n                                <Typography variant=\\\"body2\\\" color=\\\"textSecondary\\\">\\n                                    {desc}\\n                                </Typography>\\n                            </Grid>\\n                        </Grid>\\n                    </Grid>\\n                </Grid>\\n            </Paper>\\n        </div>\\n    );\\n}\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport NavigationMenu from './multi-component/navigationMenu';\\nimport * as serviceWorker from './serviceWorker';\\nimport PhotoText from \\\"./multi-component/photoText\\\";\\n\\ntry {\\n    ReactDOM.render(getDOM(), document.getElementById('root'));\\n    console.log(\\\"succeeded in rendering\\\")\\n} catch (error) {\\n    console.log(error);\\n    console.log(\\\"erroor\\\");\\n}\\n\\nfunction getDOM() {\\n    // You have to make the first character capital to use it as a component\\n    return (\\n        <div>\\n            <NavigationMenu/>\\n            <PhotoText img=\\\"/static/img/IMG_1573.JPG\\\" title=\\\"dog\\\" description=\\\"picture of my dog\\\"/>\\n            <PhotoText img=\\\"/static/img/Akadake2.jpg\\\" title=\\\"climbed Mt.Akadake\\\" description=\\\"the first climb of Mt.Akadake\\\"/>\\n        </div>\\n    )\\n}\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{43:function(e,t,a){e.exports=a(62)},48:function(e,t,a){},62:function(e,t,a){\"use strict\";a.r(t);var n=a(0),o=a.n(n),r=a(9),i=a.n(r),c=(a(48),a(37)),l=a(83),m=a(84),s=a(85),d=a(35),g=a.n(d),u=a(36),h=a.n(u),E=a(34),p=a.n(E),b=Object(l.a)({root:{width:500}});function w(){var e=b(),t=o.a.useState(0),a=Object(c.a)(t,2),n=a[0],r=a[1];return o.a.createElement(m.a,{value:n,onChange:function(e,t){r(t)},showLabels:!0,className:e.root},o.a.createElement(s.a,{label:\"Home\",icon:o.a.createElement(p.a,null),href:\"/home\"}),o.a.createElement(s.a,{label:\"Recents\",icon:o.a.createElement(g.a,null),href:\"/recents\"}),o.a.createElement(s.a,{label:\"Photos\",icon:o.a.createElement(h.a,null),href:\"/photography\"}))}Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var f=a(87),v=a(86),k=a(88),x=a(65),y=Object(l.a)(function(e){return{root:{flexGrow:1,width:\"100%\",border:1,borderColor:\"#FDEEF4\",borderStyle:\"solid\"},paper:{padding:e.spacing(2),margin:\"auto\",maxWidth:1e3,background:\"#FEFCFF\",border:10,borderColor:\"#696969\"},image:{width:128,height:128},img:{margin:\"auto\",display:\"block\",maxWidth:\"100%\",maxHeight:\"100%\"}}});function F(e){var t=y(),a=e.description;if(e.description.length>30)e.description.substring(0,30);return o.a.createElement(\"div\",{className:t.root},o.a.createElement(v.a,{className:t.paper},o.a.createElement(f.a,{container:!0,spacing:2},o.a.createElement(f.a,{item:!0},o.a.createElement(x.a,{className:t.image},o.a.createElement(\"img\",{className:t.img,alt:\"complex\",src:e.img}))),o.a.createElement(f.a,{item:!0,xs:12,sm:!0,container:!0},o.a.createElement(f.a,{item:!0,xs:!0,container:!0,direction:\"column\",spacing:2},o.a.createElement(f.a,{item:!0,xs:!0},o.a.createElement(k.a,{gutterBottom:!0,variant:\"subtitle1\"},e.title),o.a.createElement(k.a,{variant:\"body2\",color:\"textSecondary\"},a)))))))}try{i.a.render(o.a.createElement(\"div\",null,o.a.createElement(w,null),o.a.createElement(F,{img:\"/static/img/IMG_1573.JPG\",title:\"dog\",description:\"picture of my dog\"}),o.a.createElement(F,{img:\"/static/img/Akadake2.jpg\",title:\"climbed Mt.Akadake\",description:\"the first climb of Mt.Akadake\"})),document.getElementById(\"root\")),console.log(\"succeeded in rendering\")}catch(N){console.log(N),console.log(\"erroor\")}\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[43,1,2]]]);","extractedComments":[]}